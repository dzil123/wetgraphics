#version 450

layout(local_size_x = 16, local_size_y = 16) in;

layout(set = 0, binding = 0, r32f) restrict writeonly uniform image2D output_tex;

layout(std430, push_constant) uniform PushConstants {
    uvec2 size;
}
pushc;

#include <rand.glsl>

// layout(set = 1, binding = 0) uniform Config {
//     uvec2 size;
//     uint num_pixels;
// } config;

// layout(std140, set = 1, binding = 1) readonly buffer Data {
//     Pixel pixels[];
// } data;

void main() {
    uvec2 uv = gl_GlobalInvocationID.xy;
    vec2 uvf = vec2(uv) / vec2(pushc.size);

    if (uv.x < 0 || uv.x >= pushc.size.x || uv.y < 0 || uv.y >= pushc.size.y) {
        return;
    }

    uint index = uv.x + uv.y * pushc.size.x;

    imageStore(output_tex, ivec2(uv), vec4(randf(uvf).x, 0, 0, 0));
}
