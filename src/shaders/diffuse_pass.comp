#version 450

#include "shared_agents.glsl"

layout(local_size_x = 16, local_size_y = 16) in;

layout(set = 0, binding = 0, r32f) restrict uniform image2D output_tex;

layout(push_constant, std430) uniform PushConstants {
    float attenuate;  // 0 to 1: 0 = no loss, 1 = all loss
    float diffuse;    // 0 to 1: 0 = no diffuse, 1 = fastest diffuse
}
pushc;

const float delta_time = 1.0 / 60.0;

void main() {
    ivec2 uv = ivec2(gl_GlobalInvocationID.xy);
    ivec2 size = imageSize(output_tex);

    if (uv.x >= size.x || uv.y >= size.y) {
        return;
    }

    float current = imageLoad(output_tex, uv).x;

    float sum = 0;
    for (int dx = -1; dx <= 1; dx++) {
        for (int dy = -1; dy <= 1; dy++) {
            sum += imageLoad(output_tex, uv + ivec2(dx, dy)).x;
        }
    }
    float average = sum / 9;

    float new = mix(current, average, pushc.diffuse);
    new *= (1 - pushc.attenuate);

    imageStore(output_tex, uv, vec4(new, 0, 0, 0));
}
